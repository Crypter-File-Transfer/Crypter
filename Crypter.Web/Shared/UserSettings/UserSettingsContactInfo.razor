@*
 * Copyright (C) 2023 Crypter File Transfer
 *
 * This file is part of the Crypter file transfer project.
 *
 * Crypter is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The Crypter source code is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * You can be released from the requirements of the aforementioned license
 * by purchasing a commercial license. Buying such a license is mandatory
 * as soon as you develop commercial activities involving the Crypter source
 * code without disclosing the source code of your own applications.
 *
 * Contact the current copyright holder to discuss commercial license options.
 *@

@inherits UserSettingsContactInfoBase

<form>
   <div class="mb-3">
      <label for="contactInfoEmailAddress" class="form-label">Email Address</label>
      <input @bind="EmailAddressEdit" type="email" class="form-control" id="contactInfoEmailAddress" name="email" placeholder="Email Not Set" readonly="@(!IsEditing)" />
      @if (IsEditing)
      {
         @if (!string.IsNullOrEmpty(EmailAddressError))
         {
            <span class="text-danger">@EmailAddressError</span>
         }
      }
      else
      {
         @if (EmailAddressVerified)
         {
            <span class="text-success">Verified</span>
         }
         else
         {
            <span class="text-danger">Not verified</span>
         }
      }
   </div>
   <div class="mb-3" hidden="@(!IsEditing)">
      <label for="contactInfoCurrentPassword" class="form-label">Current Password</label>
      <input @bind="Password" type="password" class="form-control" id="contactInfoCurrentPassword" />
      @if (!string.IsNullOrEmpty(PasswordError))
      {
         <span class="text-danger">@PasswordError</span>
      }
   </div>
   <button type="button" class="btn btn-secondary mx-auto" @onclick="OnEditClicked" hidden="@IsEditing">Edit</button>
   <button type="button" class="btn btn-secondary mx-auto" @onclick="OnCancelClicked" hidden="@(!IsEditing)">Cancel</button>
   <button type="button" class="btn btn-primary mx-auto" @onclick="async () => await OnSaveClickedAsync()" hidden="@(!IsEditing)">Save</button>
   @if (!string.IsNullOrEmpty(GenericError))
   {
      <br />
      <span class="text-danger">@GenericError</span>
   }
</form>